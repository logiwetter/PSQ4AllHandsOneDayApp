<?xml version="1.0" encoding="utf-8"?>
<Report
	ID="InfoReports.Dashboard"
	>
	<StyleSheet/>
	<Body>
		<ResponsiveRow>
			<ResponsiveColumn
				ColspanLargeScreen="12"
				>
				<Division
					Class="panel panel-default"
					HtmlDiv="True"
					>
					<Division
						Class="panel-heading"
						HtmlDiv="True"
						ID="HeaderMain"
						>
						<Division
							HtmlDiv="True"
							ID="div_inputs"
							>
							<InputSelectList
								Class="chosen"
								ID="inpCustomerID"
								MultiSelect="True"
								OptionCaptionColumn="CompanyName"
								OptionValueColumn="CustomerID"
								>
								<DataLayer
									ConnectionID="Northwind"
									ID="dlCustomers"
									Source="Select CustomerID, CompanyName
From  Customers 
Order by CompanyName"
									Type="SQL"
								/>
								<EventHandler
									DhtmlEvent="onchange"
									>
									<Action
										ElementID="BodyMain"
										ID="actRefreshBodyMain"
										Type="RefreshElement"
									/>
								</EventHandler>
							</InputSelectList>
							<Spaces
								Size="5"
							/>
							<InputSelectList
								Caption="Ship Country: "
								Class="chosen"
								ID="inpShipCountry"
								MultiSelect="True"
								OptionCaptionColumn="ShipCountry"
								OptionValueColumn="ShipCountry"
								>
								<DataLayer
									ConnectionID="Northwind"
									ID="dlShipCountry"
									Source="with
descendants as
  ( select [ReportsTo] as parent, [EmployeeID] as descendant, 1 as level
    from [Northwind].[dbo].[Employees]
  union all
    select [ReportsTo] as parent, [EmployeeID] as child, d.level + 1
    from descendants as d
      join [Northwind].[dbo].[Employees] s
        on d.descendant = s.[ReportsTo]
  ) 


Select  distinct
  Orders.ShipCountry
From Orders
	Orders.EmployeeID in (select descendant from descendants where parent =  &apos;@Session.EmployeeID~&apos; or descendant = &apos;@Session.EmployeeID~&apos; or &apos;@Session.EmployeeID~&apos;=&apos;&apos;)"
									Type="SQL"
								/>
								<EventHandler
									DhtmlEvent="onchange"
									>
									<Action
										ElementID="BodyMain"
										ID="actRefreshBodyMain"
										Type="RefreshElement"
									/>
								</EventHandler>
							</InputSelectList>
						</Division>
					</Division>
					<Division
						Class="panel-body"
						ID="BodyMain"
						>
						<ResponsiveRow
							ID="ChartRows"
							>
							<ResponsiveColumn
								ColspanLargeScreen="6"
								>
								<Division
									Class="panel panel-default"
									HtmlDiv="True"
									>
									<Division
										Class="panel-body"
										HtmlDiv="True"
										>
										<ChartCanvas
											ChartCaption="Top 10 Customer Sales"
											>
											<DataLayer
												ConnectionID="Northwind"
												ID="SQLDataLayer1"
												Source="with
descendants as
  ( select [ReportsTo] as parent, [EmployeeID] as descendant, 1 as level
    from [Northwind].[dbo].[Employees]
  union all
    select [ReportsTo] as parent, [EmployeeID] as child, d.level + 1
    from descendants as d
      join [Northwind].[dbo].[Employees] s
        on d.descendant = s.[ReportsTo]
  ) 


Select Orders.CustomerID,
  Orders.EmployeeID,
  Orders.OrderDate,
  Orders.ShipCountry,
  Orders.ShipRegion,
  [Order Details].UnitPrice,
  [Order Details].Quantity,
  [Order Details].UnitPrice * [Order Details].Quantity As SaleAmount,
  Employees.LastName,
  Customers.CompanyName
From Orders
  Inner Join [Order Details] On Orders.OrderID = [Order Details].OrderID
  Inner Join Employees On Employees.EmployeeID = Orders.EmployeeID
  Inner Join Customers On Customers.CustomerID = Orders.CustomerID
where
	(Orders.CustomerID in (@SingleQuote.Request.inpCustomerID~) or &apos;@Request.inpCustomerID~&apos;=&apos;&apos;)
	and
	Orders.EmployeeID in (select descendant from descendants where parent =  &apos;@Session.EmployeeID~&apos; or descendant = &apos;@Session.EmployeeID~&apos; or &apos;@Session.EmployeeID~&apos;=&apos;&apos;)"
												Type="SQL"
												>
												<GroupFilter
													GroupColumn="CompanyName"
													KeepGroupedRows="False"
													>
													<GroupAggregateColumn
														AggregateColumn="SaleAmount"
														AggregateFunction="Sum"
														ID="gacSaleAmount"
													/>
												</GroupFilter>
												<SortFilter
													DataType="Number"
													SortColumn="gacSaleAmount"
													SortSequence="Descending"
												/>
												<SequenceColumn
													ID="seq"
												/>
												<ConditionFilter
													Condition="0@Data.seq~&lt;=10"
												/>
											</DataLayer>
											<Series
												ChartLabelColumn="CompanyName"
												ChartYDataColumn="gacSaleAmount"
												Type="Pie"
												>
												<Action
													ID="actJS"
													Javascript="updateClient(&apos;@Chart.CustomerID~&apos;,&apos;@Chart.CompanyName~&apos;);"
													Type="Javascript"
												/>
											</Series>
										</ChartCanvas>
									</Division>
								</Division>
							</ResponsiveColumn>
							<ResponsiveColumn
								ColspanLargeScreen="6"
								>
								<Division
									Class="panel panel-default"
									HtmlDiv="True"
									>
									<Division
										Class="panel-body"
										HtmlDiv="True"
										>
										<ChartCanvas
											ChartCaption="Sales by Country"
											>
											<DataLayer
												ConnectionID="Northwind"
												ID="SQLDataLayer1"
												Source="with
descendants as
  ( select [ReportsTo] as parent, [EmployeeID] as descendant, 1 as level
    from [Northwind].[dbo].[Employees]
  union all
    select [ReportsTo] as parent, [EmployeeID] as child, d.level + 1
    from descendants as d
      join [Northwind].[dbo].[Employees] s
        on d.descendant = s.[ReportsTo]
  ) 


Select Orders.CustomerID,
  Orders.EmployeeID,
  Orders.OrderDate,
  Orders.ShipCountry,
  Orders.ShipRegion,
  [Order Details].UnitPrice,
  [Order Details].Quantity,
  [Order Details].UnitPrice * [Order Details].Quantity As SaleAmount,
  Employees.LastName,
  Customers.CompanyName
From Orders
  Inner Join [Order Details] On Orders.OrderID = [Order Details].OrderID
  Inner Join Employees On Employees.EmployeeID = Orders.EmployeeID
  Inner Join Customers On Customers.CustomerID = Orders.CustomerID
where
	(Orders.CustomerID in (@SingleQuote.Request.inpCustomerID~) or &apos;@Request.inpCustomerID~&apos;=&apos;&apos;)
	and
	Orders.EmployeeID in (select descendant from descendants where parent =  &apos;@Session.EmployeeID~&apos; or descendant = &apos;@Session.EmployeeID~&apos; or &apos;@Session.EmployeeID~&apos;=&apos;&apos;)"
												Type="SQL"
												>
												<GroupFilter
													GroupColumn="ShipCountry"
													KeepGroupedRows="False"
													>
													<GroupAggregateColumn
														AggregateColumn="SaleAmount"
														AggregateFunction="Sum"
														ID="gacSaleAmount"
													/>
												</GroupFilter>
												<SortFilter
													DataType="Number"
													SortColumn="gacSaleAmount"
													SortSequence="Descending"
												/>
											</DataLayer>
											<Series
												ChartXDataColumn="ShipCountry"
												ChartYDataColumn="gacSaleAmount"
												Type="Bar"
												>
												<Action
													Type="Report"
													>
													<Target
														Report="InfoReports.DrillDown"
														Type="Report"
													/>
													<LinkParams
														rdAgReset="True"
														ShipCountry="@Chart.ShipCountry~"
													/>
												</Action>
											</Series>
										</ChartCanvas>
									</Division>
								</Division>
							</ResponsiveColumn>
						</ResponsiveRow>
						<ResponsiveRow
							ID="DetailTable"
							>
							<ResponsiveColumn
								ColspanLargeScreen="12"
								>
								<Division
									ID="divTablePanelContainer"
									>
									<Division
										Class="panel panel-default"
										HtmlDiv="True"
										ID="panelDetailTable"
										>
										<Division
											Class="panel-heading"
											HtmlDiv="True"
											ID="table-header"
											>
											<Label
												Caption="Details for @Request.CustomerName~"
												Class="panel-title"
												ID="lblHeader"
											/>
										</Division>
										<ConditionalClass
											Class="ThemeHidden"
											Condition="&apos;@Request.CustomerID~&apos; == &apos;&apos;"
										/>
										<Division
											Class="panel-body"
											HtmlDiv="True"
											ID="table-body"
											>
											<DataTable
												ID="dtDetails"
												Width="100"
												WidthScale="%"
												>
												<DataLayer
													ConnectionID="Northwind"
													HandleQuotesInTokens="True"
													ID="SQLDataLayer1"
													Source="with
descendants as
  ( select [ReportsTo] as parent, [EmployeeID] as descendant, 1 as level
    from [Northwind].[dbo].[Employees]
  union all
    select [ReportsTo] as parent, [EmployeeID] as child, d.level + 1
    from descendants as d
      join [Northwind].[dbo].[Employees] s
        on d.descendant = s.[ReportsTo]
  ) 


Select Orders.CustomerID,
  Orders.EmployeeID,
  Orders.OrderDate,
  Orders.ShipCountry,
  Orders.ShipRegion,
  [Order Details].UnitPrice,
  [Order Details].Quantity,
  [Order Details].UnitPrice * [Order Details].Quantity As SaleAmount,
  Employees.LastName,
  Customers.CompanyName
From Orders
  Inner Join [Order Details] On Orders.OrderID = [Order Details].OrderID
  Inner Join Employees On Employees.EmployeeID = Orders.EmployeeID
  Inner Join Customers On Customers.CustomerID = Orders.CustomerID
where
	(Orders.CustomerID = &apos;@Request.CustomerID~&apos;)
	and (Orders.ShipCountry = &apos;@Request.ShipCountry~&apos; or &apos;&apos;=&apos;@Request.ShipCountry~&apos;)
	and (Orders.CustomerID = &apos;@Request.inpCustomerID~&apos; or &apos;@Request.inpCustomerID~&apos;=&apos;&apos;)
	and Orders.EmployeeID in (select descendant from descendants where parent =  &apos;@Session.EmployeeID~&apos; or descendant = &apos;@Session.EmployeeID~&apos; or &apos;@Session.EmployeeID~&apos;=&apos;&apos;)"
													Type="SQL"
												/>
												<AutoColumns/>
											</DataTable>
										</Division>
									</Division>
								</Division>
							</ResponsiveColumn>
						</ResponsiveRow>
					</Division>
				</Division>
			</ResponsiveColumn>
		</ResponsiveRow>
		<IncludeSharedElement
			DefinitionFile="_ShareElements"
			SharedElementID="userState"
		/>
		<IncludeScript
			IncludedScript="function updateClient(clientId,clientName) {
	if (clientId == document.getElementById(&apos;CustomerID&apos;).value) {
		document.getElementById(&apos;CustomerID&apos;).value = &apos;&apos;;
		window.parent.document.getElementById(&apos;ParentClientId&apos;).value= &apos;&apos;;
		document.getElementById(&apos;CustomerName&apos;).value = &apos;&apos;;
		window.parent.document.getElementById(&apos;ParentClientName&apos;).value= &apos;&apos;;
		document.getElementById(&apos;RefreshTable&apos;).click();
	} else {
		document.getElementById(&apos;CustomerID&apos;).value = clientId;
		window.parent.document.getElementById(&apos;ParentClientId&apos;).value = clientId; 
		document.getElementById(&apos;CustomerName&apos;).value = clientName;
		window.parent.document.getElementById(&apos;ParentClientName&apos;).value= clientName;
		document.getElementById(&apos;RefreshTable&apos;).click();
	}	
}
$( document ).ready(function() {
	$(&quot;#inpCustomerID&quot;).attr(&quot;data-placeholder&quot;,&quot;companies&quot;);
	$(&quot;#inpShipCountry&quot;).attr(&quot;data-placeholder&quot;,&quot;ship country&quot;);
	$(&apos;.chosen&apos;).chosen();
	
	

});
"
		/>
		<Button
			Class="ThemeHidden"
			ID="RefreshTable"
			>
			<Action
				ElementID="divTablePanelContainer"
				ID="actRefreshTable"
				Type="RefreshElement"
				>
				<Remark>
					<WaitPage/>
				</Remark>
			</Action>
		</Button>
	</Body>
	<ideTestParams
		CustomerID=""
		CustomerName=""
		inpCustomerID=""
		ShipCountry=""
	/>
</Report>
