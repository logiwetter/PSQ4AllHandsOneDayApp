<?xml version="1.0" encoding="utf-8"?>
<Report
	ID="InfoReports.Dashboard"
	>
	<StyleSheet/>
	<Body>
		<ResponsiveRow>
			<ResponsiveColumn
				ColspanLargeScreen="12"
				>
				<Division
					Class="panel panel-default"
					HtmlDiv="True"
					>
					<Division
						Class="panel-heading"
						HtmlDiv="True"
						ID="HeaderMain"
						>
						<Division
							HtmlDiv="True"
							ID="div_inputs"
							>
							<Division
								ID="divCustomerInput"
								>
								<InputSelectList
									Class="chosen"
									DefaultValue="@Request.inpCustomerID~"
									ID="inpCustomerIDui"
									MultiSelect="True"
									OptionCaptionColumn="CompanyName"
									OptionValueColumn="CustomerID"
									>
									<Remark>
										<DataLayer
											ConnectionID="Northwind"
											ID="dlCustomers"
											Source="Select CustomerID, CompanyName
From  Customers 
Order by CompanyName"
											Type="SQL"
										/>
									</Remark>
									<DataLayer
										ConnectionID="Northwind"
										ID="dlCustomers"
										Source="

with
descendants as
  ( select [ReportsTo] as parent, [EmployeeID] as descendant, 1 as level
    from [Northwind].[dbo].[Employees]
  union all
    select [ReportsTo] as parent, [EmployeeID] as child, d.level + 1
    from descendants as d
      join [Northwind].[dbo].[Employees] s
        on d.descendant = s.[ReportsTo]
  ) 

select
  distinct o.CustomerID, c.CompanyName
from
 dbo.Orders O
 join dbo.Customers c
   on o.CustomerID = c.CustomerID
 and (o.EmployeeID in (select descendant from descendants where parent = &apos;@Session.EmployeeID~&apos; or descendant = &apos;@Session.EmployeeID~&apos; or &apos;@Session.EmployeeID~&apos;=&apos;&apos;))"
										Type="SQL"
									/>
									<EventHandler
										DhtmlEvent="onchange"
										>
										<Remark>
											<Action
												ElementID="BodyMain"
												ID="actRefreshBodyMain"
												Type="RefreshElement"
											/>
										</Remark>
										<Action
											ID="actSetClientList"
											Javascript="updateClientList();"
											Type="Javascript"
										/>
									</EventHandler>
								</InputSelectList>
							</Division>
							<Division
								ID="divShipCountryInput"
								>
								<InputSelectList
									Class="chosen"
									DefaultValue="@Request.inpShipCountry~"
									ID="inpShipCountryUI"
									MultiSelect="True"
									OptionCaptionColumn="ShipCountry"
									OptionValueColumn="ShipCountry"
									>
									<Remark>
										<DataLayer
											ConnectionID="Northwind"
											ID="dlShipCountry"
											Source="with
descendants as
  ( select [ReportsTo] as parent, [EmployeeID] as descendant, 1 as level
    from [Northwind].[dbo].[Employees]
  union all
    select [ReportsTo] as parent, [EmployeeID] as child, d.level + 1
    from descendants as d
      join [Northwind].[dbo].[Employees] s
        on d.descendant = s.[ReportsTo]
  ) 


Select  distinct
  Orders.ShipCountry
From Orders
where
	Orders.EmployeeID in (select descendant from descendants where parent =  &apos;@Session.EmployeeID~&apos; or descendant = &apos;@Session.EmployeeID~&apos; or &apos;@Session.EmployeeID~&apos;=&apos;&apos;)"
											Type="SQL"
										/>
									</Remark>
									<DataLayer
										ConnectionID="Northwind"
										ID="dlShipCountry"
										Source="with
descendants as
  ( select [ReportsTo] as parent, [EmployeeID] as descendant, 1 as level
    from [Northwind].[dbo].[Employees]
  union all
    select [ReportsTo] as parent, [EmployeeID] as child, d.level + 1
    from descendants as d
      join [Northwind].[dbo].[Employees] s
        on d.descendant = s.[ReportsTo]
  ) 

select
  distinct o.ShipCountry
from
 dbo.Orders o
Where
 o.CustomerID in (@SingleQuote.Request.inpCustomerID~) or (&apos;@Request.inpCustomerID~&apos;=&apos;&apos;)
 and (o.EmployeeID in (select descendant from descendants where parent = &apos;@Session.EmployeeID~&apos; or descendant = &apos;@Session.EmployeeID~&apos; or &apos;@Session.EmployeeID~&apos;=&apos;&apos;))"
										Type="SQL"
									/>
									<EventHandler
										DhtmlEvent="onchange"
										>
										<Remark>
											<Action
												ElementID="BodyMain"
												ID="actRefreshBodyMain"
												Type="RefreshElement"
											/>
										</Remark>
										<Action
											ID="actSetShipCountry"
											Javascript="updateShipCountry();"
											Type="Javascript"
										/>
									</EventHandler>
								</InputSelectList>
								<Remark>
									<InputSelectList
										Class="chosen"
										DefaultValue="@Request.inpShipRegion~"
										ID="inpShipRegionUI"
										MultiSelect="True"
										OptionCaptionColumn="ShipRegion"
										OptionValueColumn="ShipRegion"
										>
										<DataLayer
											ConnectionID="Northwind"
											ID="dlShipRegion"
											Source="with
descendants as
  ( select [ReportsTo] as parent, [EmployeeID] as descendant, 1 as level
    from [Northwind].[dbo].[Employees]
  union all
    select [ReportsTo] as parent, [EmployeeID] as child, d.level + 1
    from descendants as d
      join [Northwind].[dbo].[Employees] s
        on d.descendant = s.[ReportsTo]
  ) 


Select  distinct
  Orders.ShipRegion
From Orders
where
	Orders.EmployeeID in (select descendant from descendants where parent =  &apos;@Session.EmployeeID~&apos; or descendant = &apos;@Session.EmployeeID~&apos; or &apos;@Session.EmployeeID~&apos;=&apos;&apos;)
	and (Orders.ShipCountry = &apos;@Request.inpShipCountry~&apos; or &apos;@Request.inpShipCountry~&apos;=&apos;&apos; )"
											Type="SQL"
										/>
										<EventHandler
											DhtmlEvent="onchange"
											>
											<Remark>
												<Action
													ElementID="BodyMain"
													ID="actRefreshBodyMain"
													Type="RefreshElement"
												/>
											</Remark>
											<Action
												ID="actSetShipRegion"
												Javascript="updateShipRegion();"
												Type="Javascript"
											/>
										</EventHandler>
									</InputSelectList>
								</Remark>
								<Image
									Caption="_theme_files.1x1.gif"
									Class="ThemeHidden"
									ID="onLoadGif"
									>
									<EventHandler
										DhtmlEvent="onload"
										>
										<Action
											Javascript="$(&apos;#inpShipCountryUI&apos;).attr(&quot;data-placeholder&quot;,&quot;ship country&quot;);
$(&apos;#inpShipCountryUI.chosen&apos;).chosen();
if (document.getElementById(&apos;inpShipCountry&apos;).value != $(&apos;#inpShipCountryUI&apos;).val()) {
	updateShipCountry();
}"
											Type="Javascript"
										/>
									</EventHandler>
								</Image>
							</Division>
						</Division>
					</Division>
					<Division
						Class="panel-body"
						ID="BodyMain"
						>
						<ResponsiveRow
							ID="ChartRows"
							>
							<ResponsiveColumn
								ColspanLargeScreen="6"
								>
								<Division
									Class="panel panel-default"
									HtmlDiv="True"
									>
									<Division
										Class="panel-body"
										HtmlDiv="True"
										>
										<ChartCanvas
											AutoQuicktip="False"
											ChartCaption="Top 10 Customer Sales"
											>
											<DataLayer
												ConnectionID="Northwind"
												ID="SQLDataLayer1"
												Source="with
descendants as
  ( select [ReportsTo] as parent, [EmployeeID] as descendant, 1 as level
    from [Northwind].[dbo].[Employees]
  union all
    select [ReportsTo] as parent, [EmployeeID] as child, d.level + 1
    from descendants as d
      join [Northwind].[dbo].[Employees] s
        on d.descendant = s.[ReportsTo]
  ) 


Select Orders.CustomerID,
  Orders.EmployeeID,
  Orders.OrderDate,
  Orders.ShipCountry,
  Orders.ShipRegion,
  [Order Details].UnitPrice,
  [Order Details].Quantity,
  [Order Details].UnitPrice * [Order Details].Quantity As SaleAmount,
  Employees.LastName,
  Customers.CompanyName
From Orders
  Inner Join [Order Details] On Orders.OrderID = [Order Details].OrderID
  Inner Join Employees On Employees.EmployeeID = Orders.EmployeeID
  Inner Join Customers On Customers.CustomerID = Orders.CustomerID
where
	(Orders.CustomerID in (@SingleQuote.Request.inpCustomerID~) or &apos;@Request.inpCustomerID~&apos;=&apos;&apos;)
	and (Orders.ShipCountry in (@SingleQuote.Request.inpShipCountry~) or &apos;@Request.inpShipCountry~&apos;=&apos;&apos;)
	and (Orders.ShipRegion in (@SingleQuote.Request.inpShipRegion~) or &apos;@Request.inpShipRegion~&apos;=&apos;&apos;)
	and
	Orders.EmployeeID in (select descendant from descendants where parent =  &apos;@Session.EmployeeID~&apos; or descendant = &apos;@Session.EmployeeID~&apos; or &apos;@Session.EmployeeID~&apos;=&apos;&apos;)"
												Type="SQL"
												>
												<GroupFilter
													GroupColumn="CompanyName"
													KeepGroupedRows="False"
													>
													<GroupAggregateColumn
														AggregateColumn="SaleAmount"
														AggregateFunction="Sum"
														ID="gacSaleAmount"
													/>
												</GroupFilter>
												<SortFilter
													DataType="Number"
													SortColumn="gacSaleAmount"
													SortSequence="Descending"
												/>
												<SequenceColumn
													ID="seq"
												/>
												<ConditionFilter
													Condition="0@Data.seq~&lt;=10"
												/>
											</DataLayer>
											<Series
												ChartLabelColumn="CompanyName"
												ChartYDataColumn="gacSaleAmount"
												Type="Pie"
												>
												<Action
													ID="actJS"
													Javascript="updateClient(&apos;@Chart.CustomerID~&apos;,&apos;@Chart.CompanyName~&apos;);"
													Type="Javascript"
												/>
												<Quicktip
													Title="@Chart.CompanyName~"
													>
													<QuicktipRow
														Format="$ ###,###,###;($ ###,###,###)"
														Value="@Chart.gacSaleAmount~"
													/>
												</Quicktip>
											</Series>
										</ChartCanvas>
									</Division>
								</Division>
							</ResponsiveColumn>
							<ResponsiveColumn
								ColspanLargeScreen="6"
								>
								<Division
									Class="panel panel-default"
									HtmlDiv="True"
									>
									<Division
										Class="panel-body"
										HtmlDiv="True"
										>
										<ChartCanvas
											AutoQuicktip="False"
											ChartCaption="Sales by Country"
											>
											<DataLayer
												ConnectionID="Northwind"
												ID="SQLDataLayer1"
												Source="with
descendants as
  ( select [ReportsTo] as parent, [EmployeeID] as descendant, 1 as level
    from [Northwind].[dbo].[Employees]
  union all
    select [ReportsTo] as parent, [EmployeeID] as child, d.level + 1
    from descendants as d
      join [Northwind].[dbo].[Employees] s
        on d.descendant = s.[ReportsTo]
  ) 


Select Orders.CustomerID,
  Orders.EmployeeID,
  Orders.OrderDate,
  Orders.ShipCountry,
  Orders.ShipRegion,
  [Order Details].UnitPrice,
  [Order Details].Quantity,
  [Order Details].UnitPrice * [Order Details].Quantity As SaleAmount,
  Employees.LastName,
  Customers.CompanyName
From Orders
  Inner Join [Order Details] On Orders.OrderID = [Order Details].OrderID
  Inner Join Employees On Employees.EmployeeID = Orders.EmployeeID
  Inner Join Customers On Customers.CustomerID = Orders.CustomerID
where
	(Orders.CustomerID in (@SingleQuote.Request.inpCustomerID~) or &apos;@Request.inpCustomerID~&apos;=&apos;&apos;)
	and (Orders.ShipCountry in (@SingleQuote.Request.inpShipCountry~) or &apos;@Request.inpShipCountry~&apos;=&apos;&apos;)
	and (Orders.ShipRegion in (@SingleQuote.Request.inpShipRegion~) or &apos;@Request.inpShipRegion~&apos;=&apos;&apos;)
	and
	Orders.EmployeeID in (select descendant from descendants where parent =  &apos;@Session.EmployeeID~&apos; or descendant = &apos;@Session.EmployeeID~&apos; or &apos;@Session.EmployeeID~&apos;=&apos;&apos;)"
												Type="SQL"
												>
												<GroupFilter
													GroupColumn="ShipCountry"
													KeepGroupedRows="False"
													>
													<GroupAggregateColumn
														AggregateColumn="SaleAmount"
														AggregateFunction="Sum"
														ID="gacSaleAmount"
													/>
												</GroupFilter>
												<SortFilter
													DataType="Number"
													SortColumn="gacSaleAmount"
													SortSequence="Descending"
												/>
											</DataLayer>
											<Series
												ChartXDataColumn="ShipCountry"
												ChartYDataColumn="gacSaleAmount"
												Type="Bar"
												>
												<Action
													Type="Report"
													>
													<Target
														Report="InfoReports.DrillDown"
														Type="Report"
													/>
													<LinkParams
														rdAgReset="True"
														ShipCountry="@Chart.ShipCountry~"
													/>
												</Action>
												<Quicktip
													Title="@Chart.CompanyName~"
													>
													<QuicktipRow
														Format="$ ###,###,###;($ ###,###,###)"
														Value="@Chart.gacSaleAmount~"
													/>
												</Quicktip>
											</Series>
										</ChartCanvas>
									</Division>
								</Division>
							</ResponsiveColumn>
						</ResponsiveRow>
						<ResponsiveRow
							ID="DetailTable"
							>
							<ResponsiveColumn
								ColspanLargeScreen="12"
								>
								<Division
									ID="divTablePanelContainer"
									>
									<Division
										Class="panel panel-default"
										HtmlDiv="True"
										ID="panelDetailTable"
										>
										<Division
											Class="panel-heading"
											HtmlDiv="True"
											ID="table-header"
											>
											<Label
												Caption="=&apos;Details for &apos; + decodeURIComponent(&apos;@Request.CustomerName~&apos;)"
												Class="panel-title"
												ID="lblHeader"
											/>
										</Division>
										<ConditionalClass
											Class="ThemeHidden"
											Condition="&apos;@Request.CustomerID~&apos; == &apos;&apos;"
										/>
										<Division
											Class="panel-body"
											HtmlDiv="True"
											ID="table-body"
											>
											<DataTable
												ID="dtDetails"
												Width="100"
												WidthScale="%"
												>
												<DataLayer
													ConnectionID="Northwind"
													HandleQuotesInTokens="True"
													ID="SQLDataLayer1"
													Source="with
descendants as
  ( select [ReportsTo] as parent, [EmployeeID] as descendant, 1 as level
    from [Northwind].[dbo].[Employees]
  union all
    select [ReportsTo] as parent, [EmployeeID] as child, d.level + 1
    from descendants as d
      join [Northwind].[dbo].[Employees] s
        on d.descendant = s.[ReportsTo]
  ) 


Select Orders.CustomerID,
  Orders.EmployeeID,
  Orders.OrderDate,
  Orders.ShipCountry,
  Orders.ShipRegion,
  [Order Details].UnitPrice,
  [Order Details].Quantity,
  [Order Details].UnitPrice * [Order Details].Quantity As SaleAmount,
  Employees.LastName,
  Customers.CompanyName
From Orders
  Inner Join [Order Details] On Orders.OrderID = [Order Details].OrderID
  Inner Join Employees On Employees.EmployeeID = Orders.EmployeeID
  Inner Join Customers On Customers.CustomerID = Orders.CustomerID
where
	(Orders.CustomerID = &apos;@Request.CustomerID~&apos;)
	and (Orders.CustomerID in (@SingleQuote.Request.inpCustomerID~) or &apos;@Request.inpCustomerID~&apos;=&apos;&apos;)
	and (Orders.ShipCountry in (@SingleQuote.Request.inpShipCountry~) or &apos;@Request.inpShipCountry~&apos;=&apos;&apos;)
	and (Orders.ShipRegion in (@SingleQuote.Request.inpShipRegion~) or &apos;@Request.inpShipRegion~&apos;=&apos;&apos;)
	and Orders.EmployeeID in (select descendant from descendants where parent =  &apos;@Session.EmployeeID~&apos; or descendant = &apos;@Session.EmployeeID~&apos; or &apos;@Session.EmployeeID~&apos;=&apos;&apos;)"
													Type="SQL"
												/>
												<Remark>
													<AutoColumns/>
												</Remark>
												<DataTableColumn
													Header="Customer ID"
													ID="colCustomerID"
													>
													<Label
														Caption="@Data.CustomerID~"
														ID="lblCustomerID"
													/>
												</DataTableColumn>
												<DataTableColumn
													Header="Employee ID"
													ID="colEmployeeID"
													>
													<Label
														Caption="@Data.EmployeeID~"
														ID="lblEmployeeID"
													/>
												</DataTableColumn>
												<DataTableColumn
													Header="Order Date"
													ID="colOrderDate"
													>
													<Label
														Caption="@Data.OrderDate~"
														Format="Short Date"
														ID="lblOrderDate"
													/>
												</DataTableColumn>
												<DataTableColumn
													Header="Country"
													ID="colShipCountry"
													>
													<Label
														Caption="@Data.ShipCountry~"
														ID="lblShipCountry"
													/>
												</DataTableColumn>
												<DataTableColumn
													Header="Region"
													ID="colShipRegion"
													>
													<Label
														Caption="@Data.ShipRegion~"
														ID="lblShipRegion"
													/>
												</DataTableColumn>
												<DataTableColumn
													Header="Unit Price"
													ID="colUnitPrice"
													>
													<Label
														Caption="@Data.UnitPrice~"
														Format="Currency"
														ID="lblUnitPrice"
													/>
												</DataTableColumn>
												<DataTableColumn
													Header="Quantity"
													ID="colQuantity"
													>
													<Label
														Caption="@Data.Quantity~"
														Format="###,###,##0"
														ID="lblQuantity"
													/>
												</DataTableColumn>
												<DataTableColumn
													Header="Sale Amount"
													ID="colSaleAmount"
													>
													<Label
														Caption="@Data.SaleAmount~"
														Format="Currency"
														ID="lblSaleAmount"
													/>
												</DataTableColumn>
												<DataTableColumn
													Header="Last Name"
													ID="colLastName"
													>
													<Label
														Caption="@Data.LastName~"
														ID="lblLastName"
													/>
												</DataTableColumn>
												<DataTableColumn
													Header="Company"
													ID="colCompanyName"
													>
													<Label
														Caption="@Data.CompanyName~"
														ID="lblCompanyName"
													/>
												</DataTableColumn>
											</DataTable>
										</Division>
									</Division>
								</Division>
							</ResponsiveColumn>
						</ResponsiveRow>
					</Division>
				</Division>
			</ResponsiveColumn>
		</ResponsiveRow>
		<IncludeSharedElement
			DefinitionFile="_ShareElements"
			SharedElementID="userState"
		/>
		<IncludeScript
			IncludedScript="function updateClient(clientId,clientName) {
	if (clientId == document.getElementById(&apos;CustomerID&apos;).value) {
		document.getElementById(&apos;CustomerID&apos;).value = &apos;&apos;;
		window.parent.document.getElementById(&apos;ParentClientId&apos;).value= &apos;&apos;;
		document.getElementById(&apos;CustomerName&apos;).value = &apos;&apos;;
		window.parent.document.getElementById(&apos;ParentClientName&apos;).value= &apos;&apos;;
		document.getElementById(&apos;RefreshTable&apos;).click();
	} else {
		document.getElementById(&apos;CustomerID&apos;).value = clientId;
		window.parent.document.getElementById(&apos;ParentClientId&apos;).value = clientId; 
		document.getElementById(&apos;CustomerName&apos;).value = clientName;
		window.parent.document.getElementById(&apos;ParentClientName&apos;).value= clientName;
		document.getElementById(&apos;RefreshTable&apos;).click();
	}	
}
function updateClientList() {	
	var clientListUI = $(&apos;#inpCustomerIDui&apos;).val();
	var clientList = $(&apos;#inpCustomerID&apos;).val();
	if (clientList != clientListUI) {
		$(&apos;#inpCustomerID&apos;).val(clientListUI);
		window.parent.document.getElementById(&apos;ParentClientIdList&apos;).value = clientListUI;
		document.getElementById(&apos;RefreshEverythingAndShipCountryInput&apos;).click();
	}
}
function updateShipCountry() {
	if (document.getElementById(&apos;inpShipCountry&apos;).value != $(&apos;#inpShipCountryUI&apos;).val()) {
		document.getElementById(&apos;inpShipCountry&apos;).value = $(&apos;#inpShipCountryUI&apos;).val();
		window.parent.document.getElementById(&apos;ParentShipCountry&apos;).value = $(&apos;#inpShipCountryUI&apos;).val();
	}
	document.getElementById(&apos;RefreshEverything&apos;).click();	
}
function RefreshEverything() {
	
}
function updateShipRegion() {	
	if (document.getElementById(&apos;inpShipRegion&apos;).value != $(&apos;#inpShipRegionUI&apos;).val()) {
		document.getElementById(&apos;inpShipRegion&apos;).value = $(&apos;#inpShipRegionUI&apos;).val();
		window.parent.document.getElementById(&apos;ParentShipRegion&apos;).value = $(&apos;#inpShipRegionUI&apos;).val();
		document.getElementById(&apos;RefreshEverything&apos;).click();
	}		
}


$( document ).ready(function() {
	$(&apos;#inpCustomerIDui&apos;).attr(&quot;data-placeholder&quot;,&quot;companies&quot;);
	$(&apos;#inpCustomerIDui.chosen&apos;).chosen();
});"
		/>
		<Button
			Class="ThemeHidden"
			ID="RefreshEverythingAndShipCountryInput"
			>
			<Action
				ElementID="divShipCountryInput"
				ID="actRefreshEverythingAndShipCountryInput"
				Type="RefreshElement"
				>
				<Remark>
					<WaitPage/>
				</Remark>
			</Action>
		</Button>
		<Button
			Class="ThemeHidden"
			ID="RefreshEverything"
			>
			<Action
				ElementID="BodyMain"
				ID="actRefreshEverything"
				Type="RefreshElement"
				>
				<Remark>
					<WaitPage/>
				</Remark>
			</Action>
		</Button>
		<Button
			Class="ThemeHidden"
			ID="RefreshTable"
			>
			<Action
				ElementID="divTablePanelContainer"
				ID="actRefreshTable"
				Type="RefreshElement"
				>
				<Remark>
					<WaitPage/>
				</Remark>
			</Action>
		</Button>
	</Body>
	<ideTestParams
		CustomerID=""
		CustomerName=""
		inpCustomerID=""
		inpShipCountry=""
		inpShipRegion=""
	/>
</Report>
